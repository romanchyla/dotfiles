{
  "name": "Termrk",
  "main": "./lib/termrk",
  "version": "0.1.28",
  "description": "Terminal panel inside Atom",
  "activationCommands": {
    "atom-workspace": [
      "termrk:toggle",
      "termrk:show"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/romgrk/termrk.git"
  },
  "license": "MIT",
  "engines": {
    "atom": ">=0.174.0 <2.0.0"
  },
  "keywords": [
    "terminal",
    "shell",
    "bash",
    "sh"
  ],
  "dependencies": {
    "fs-plus": "^2.8.1",
    "interact.js": "^1.2.4",
    "jquery": "^2.1.4",
    "jquery.transit": "^0.9.12",
    "keykit": "^1.1.6",
    "pty.js": "0.3.0",
    "season": "^5.3.0",
    "space-pen": "^5.1.1",
    "term.js": "0.0.4",
    "underscore-plus": "^1.6.6"
  },
  "readme": "*Termrk is a terminal implementation based on [term.js][term] and [pty.js][pty] modules by Christopher Jeffrey.*\n\nSpawns default system shell in a sliding panel.\nBasic features include:\n- user-defined commands\n- multiple terminal sessions\n- running current file in terminal [1]\n- inserting selection\n- inserting current file path\n- color/font styling\n\n[1] currently, only supports .js, .node, .coffee, .py and `#!`\n\n*If some feature that you'd like to see isn't implemented, don't hesitate to create a request.*\n\n## Examples\n\nRunning basic bash:\n\n![basic](http://raw.githubusercontent.com/romgrk/termrk/master/static/out.gif)\n[link](http://raw.githubusercontent.com/romgrk/termrk/master/static/out.gif)\n\nRunning vim:\n\n![vim](http://raw.githubusercontent.com/romgrk/termrk/master/static/vim.gif)\n[link](http://raw.githubusercontent.com/romgrk/termrk/master/static/vim.gif)\n\n## Keybindings\n\n*Disable all default keybindings in SettingsView >> Termrk >> Default keymap*\n\n#### workspace\n\n- `alt-space`:      toggle terminal panel\n- `ctrl-alt-space`: create terminal in current file's dir\n- `ctrl-alt-shift-space`: insert current selection in active terminal\n\n#### inside terminal\n\n- `ctrl-escape`:    close current terminal\n- `ctrl-space`:     create terminal\n- `ctrl-tab`:       activate next terminal\n- `ctrl-shift-tab`: activate previous terminal\n\n**Note**: if a `keystroke` is catched by an atom-command but you need it inside terminal, add the following code to you `keymap.cson`.\n\n```\n'.termrk':\n  'KEYSTROKE_TO_CATCH': 'native!'\n```\n\n## Commands\n\nName | Action | Scope, Binding\n---- | ---- | ----\n`termrk:toggle` | Toggle termrk panel | `atom-workspace`, `alt-space`\n`termrk:hide` | Hide termrk panel | `atom-workspace`\n`termrk:show` | Show termrk panel | `atom-workspace`\n`termrk:toggle-focus` | Toggle focus of termrk panel | `atom-workspace`\n`termrk:focus` | Focus termrk panel | `atom-workspace`\n`termrk:blur` | Blur termrk panel | `atom-workspace`\n`termrk:create-terminal` | Creates new session | `atom-workspace`, `ctrl-space`\n`termrk:create-terminal-current-dir` | Creates session in current file's directory | `atom-workspace`, `ctrl-alt-space`\n`termrk:close-terminal` | Close active terminal session | `.termrk`, `ctrl-escape`\n`termrk:insert-selection` | Inserts current selection in terminal | `atom-workspace`, `ctrl-alt-sphift-space`\n`termrk:insert-filename` | Insert current file's path in terminal | `.termrk`, `% f`\n`termrk:run-current-file` | Runs current file in terminal | `atom-workspace`\n\nOther:\n`termrk:create-terminal`, `termrk:activate-next-terminal`,\n`termrk:activate-previous-terminal`\n\n# User commands (experimental)\n\nYou can define your own set of commands in `$ATOM_HOME/userCommands.cson`.\n*(file name can be changed in settings)*\n\nCommands have this format:\n\n```coffeescript\n'echofile':\n  command: 'echo The current file is $FILE'\n```\nThe previous command description will be mapped to `'termrk:command-echofile'`.\n\nAvailable vars:\n\nname | input from\n-- | --\n`$FILE` | `atom.workspace.getActiveTextEditor().getURI()`\n`$DIR` | `path.dirname $FILE`\n`$PROJECT` | `atom.project.getPaths()[0]`\n\n*Not actual vars! Using String.replace*\n\nAgain, this is experimental. Therefore, it is subject to change. Feedback is welcome.\n\n## Styling\n\nExample, for black text on white bg, and blue cursor-bg.\n\n```less\n.termrk .terminal {\n    color: black;\n    background-color: blue;\n}\n\n.termrk .terminal-cursor {\n    color: black;\n    background-color: white;\n}\n```\n\n[term]: https://github.com/chjj/term.js\n[pty]:  https://github.com/chjj/pty.js\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/romgrk/termrk/issues"
  },
  "homepage": "https://github.com/romgrk/termrk#readme",
  "_id": "Termrk@0.1.28",
  "_shasum": "770541ffd1387aa5628a051115c522d5f365de03",
  "_resolved": "file:../d-1151123-23362-ajjjwy/package.tgz",
  "_from": "../d-1151123-23362-ajjjwy/package.tgz"
}
